name: 'Resume Release'
description: 'Resumes the paused StepFunction workflow for a given app release by sending back its approval status.'
inputs:
  github_token:
    description: 'Token used to authenticate with the GitHub REST API'
    required: true
  approved:
    description: 'true/false indicating if the release is approved or not'
    required: true
  task_token:
    description: 'Task token to use to resume the paused release workflow'
    required: true
  iam_role_arn:
    description: 'IAM Role to assume.'
    required: true
  aws_region:
    description: 'AWS Region to use when configuring credentials'
    default: 'us-west-2'
    required: false
runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: 'Check PIP Cache'
      uses: actions/cache@v2
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python39-pip-review-release
    - name: 'Install Dependencies'
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r "${{ github.action_path }}/../scripts/review_release/requirements.txt"
    - name: 'Update Commit Status'
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      shell: bash
      run: |
        cd ${{ github.action_path }}/..
        if [[ ${{ inputs.approved }} == 'true' ]]; then
          state='pending'
          description='Pending upload to Splunkbase'
        else
          state=failure
          description='Release rejected'
        fi
        python -m scripts.review_release.put_commit_status ${{ github.repository }} ${{ github.sha }} \
          -s "$state" -d "$description" -t "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
    - name: 'Configure AWS Credentials'
      uses: aws-actions/configure-aws-credentials@v1.6.1
      with:
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: ${{ inputs.iam_role_arn }}
    - name: 'Resume Release'
      shell: bash
      run: |
        output="{\"approved\": ${{ inputs.approved }}, \"workflow_run_id\": ${{ github.run_id }}}"
        aws stepfunctions send-task-success --task-token "${{ inputs.task_token }}" --task-output "$output"
