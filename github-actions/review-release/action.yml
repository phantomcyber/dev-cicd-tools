name: 'Review Release'
description: 'Determines whether a given app release is automatically approved for Splunkbase upload or if it requires manual approval.'
inputs:
  github_token:
    description: 'Token used to authenticate with the GitHub REST API'
    required: true
outputs:
  manual_review_required:
    description: "true/false depending on if the the release requires manual review"
    value: ${{ steps.review_release.outputs.manual_review_required }}
runs:
  using: 'composite'
  steps:
    - name: 'Export Requirements file path'
      shell: bash
      run: echo "REQUIREMENTS_FILE_PATH=${{ github.action_path }}/../scripts/review_release/requirements.txt" >> $GITHUB_ENV
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
        cache: 'pip'
        cache-dependency-path: ${{ env.REQUIREMENTS_FILE_PATH }}
    - name: 'Check PIP Cache'
      uses: actions/cache@v2
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-approve-release
    - name: 'Install Dependencies'
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r ${{ env.REQUIREMENTS_FILE_PATH }}
    - name: Checkout App Repo
      uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}
    - name: 'Review Release'
      id: review_release
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        APP_REPO: ${{ github.repository }}
      shell: bash
      run: |
        cd ${{ github.action_path }}/..
        exit_code=0
        python -m scripts.review_release.main || exit_code=$?
        if [[ $exit_code -eq 0 ]]; then
          echo '::set-output name=manual_review_required::false'
        elif [[ $exit_code -eq 1 ]]; then
          echo '::set-output name=manual_review_required::true'
        else
          exit $exit_code
        fi
