#!/usr/bin/env bash

APP_DIR=$(pwd)
SCRIPT_DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

function package_py3_app_dependencies() {
  PYTHON_VERSION_STRING=$1
  PIP_DEPENDENCIES_KEY=$2
  docker run --rm -v "$APP_DIR":/src -v "$SCRIPT_DIR":/pre-commit/ -w "$SCRIPT_DIR" \
    quay.io/pypa/manylinux2014_x86_64 /bin/bash -c \
     "/opt/python/cp39-cp39/bin/python /pre-commit/package_app_dependencies.py \
     /src /opt/python/$PYTHON_VERSION_STRING/bin/pip $PIP_DEPENDENCIES_KEY --repair_wheels"
}

if ! jq --help &> /dev/null; then
  echo 'Please ensure jq is installed (eg, brew install jq)'
  exit 1
fi

app_json="$(find ./*.json ! -name '*.postman_collection.json'| head -n 1)"
app_py_version="$(jq .python_version "$app_json")"
if [[ "$app_py_version" == 'null' ]]; then
  app_py_version='"2.7"'
fi

if [[ "$app_py_version" == '"2.7"' ]]; then
  echo "Python 2 is no longer supported"
  exit $?
fi

if ! docker info &> /dev/null; then
  echo 'Please ensure Docker is installed and running on your machine'
  exit 1
fi

pip3_dependencies="$(jq .pip3_dependencies "$app_json")"
if [[ "$pip3_dependencies" == 'null' ]]; then
  pip3_dependencies_key='pip_dependencies'
else
  pip3_dependencies_key='pip3_dependencies'
fi

pip39_dependencies_key='pip39_dependencies'

package_py3_app_dependencies 'cp36-cp36m' $pip3_dependencies_key
package_py3_app_dependencies 'cp39-cp39' $pip39_dependencies_key
